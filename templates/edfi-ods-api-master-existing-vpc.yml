AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a new VPC and deploys the Ed-Fi ODS/API Software Suite.  **
  WARNING **  You will be billed for the AWS resources that are created from this
  template.  There is no cost to use this template, but are responsible for the costs
  incurred by the resources created in this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EdFi ODS API Environment Information
        Parameters:
          - Version
          - Environment
          - EnvironmentSize
          - DBEngine
          - EnvLabel
          - AvailabilityZones
          - SSLCertificateId
          - S3BucketSecureStore
          - DatabaseData
          - UseSwagger
          - DatabasePassword
          - AdminPasswordAPI
          - AdminPasswordRDGW
          - RDGWCIDR
      - Label:
          default: Production Required Information (only fill in if you selected the 'prod' type of environment value above, otherwise leave as is)
        Parameters:
          - DomainName
          - AdminPassword
          - MultiAZAppServers
          - MultiAZRDS
          - EnableAutoScaling
      - Label:
          default: Provide Your Own Existing VPC Network Configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - LatestAmiId
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones (2)
      VPCID:
        default: VPC ID
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      DatabaseData:
        default: Initial ODS API Database Data Set
      MultiAZRDS:
        default: Highly Available Database
      DBEngine:
        default: Database Engine
      RDSInstanceType:
        default: RDS Instance type
      LatestAmiId:
        default: 'Latest AMI ID'
      MultiAZAppServers:
        default: Highly Available Application Server Pool
      EnableAutoScaling:
        default: Enable AutoScaling for ODS API Servers
      Version:
        default: ODS/API Software Suite Version
      Environment:
        default: Type of environment
      EnvironmentSize:
        default: Select a sizing option based on anticipated levels of usage
      EnvLabel:
        default: Label your environment
      S3BucketSecureStore:
        default: S3 location to store your own secure files
      RDGWCIDR:
        default: Network Address range (CIDR) to allow connections to Remote Desktop Gateway
      UseSwagger:
        default: Install the SwaggerUI into the environment
      DomainName:
        default: Domain Name that matches the SSL certificate for the ODS/API environment
      AdminPassword:
        default: A password for the local administrator account on the Admin Server
      AdminPasswordAPI:
        default: A password for the local administrator account on the ODS API Server
      AdminPasswordRDGW:
        default: A password for the local administrator account on the RDP Server
      DatabasePassword:
        default: A password for the database account
      SSLCertificateId:
        default: The AWS ARN of a SSL certificate ID
Parameters:
  EnvironmentSize:
    AllowedValues:
      - small
      - medium
      - large
      - xlarge
    Default: small
    Description: Select the size of the environment to launch.  Smaller is cheaper but less performant. 
    Type: String
  Environment:
    AllowedValues:
      - prod
      - nonprod
    Default: nonprod
    Description: Select the type of environment to launch.  Prod can be configured to be highly available,
      while 'nonprod' is cheaper and useful for test environments.
    Type: String
  Version:
    AllowedValues:
      - 3.4.0
    Default: 3.4.0
    Description: Select the version of the ODS/API Software Suite to install.
    Type: String
  EnvLabel:
    Description: Provide a unique label for your environment to identify resources.  You cannot use an label name that is already in use.
    Type: String
  UseSwagger:
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'yes'
    Description: Should the SwaggerUI be installed? (not recommended for Production
      environments).
    Type: String
  SSLCertificateId:
    Default: ''
    Description: The AWS ARN value of the SSL certificate in the AWS ACM service to use for
      the ODS API environment.
    Type: String
  DomainName:
    Description: The fully qualified domain name in a URL to be used for this ODS
      API environment (e.g. edfi.domain.com)
    Type: String
  S3BucketSecureStore:
    Type: String
    Default: ''
    Description: The name of the S3 bucket in YOUR AWS account that can be used to
      store the SSH Private Key pair file.
  AvailabilityZones:
    Description: A List of Availability Zones to use for the subnets that exist in your own VPC . You
      only will need to select two Availability Zones that contain both Public and Private subnets
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID to use.
    ConstraintDescription: You must select an existing VPC for this deployment
  PublicSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: The Subnet ID of a Public Subnet in one of the Availability Zones above
    ConstraintDescription: You must select an existing Public Subnet ID in the VPC selected for this deployment
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: The Subnet ID of a Public Subnet in the other Availability Zone above
    ConstraintDescription: You must select an existing Public Subnet ID in the VPC selected for this deployment
  PrivateSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: The Subnet ID of a Private Subnet in one of the Availability Zones above
    ConstraintDescription: You must select an existing Private Subnet ID in the VPC selected for this deployment
  PrivateSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: The Subnet ID of a Private Subnet in the other Availability Zone above
    ConstraintDescription: You must select an existing Private Subnet ID in the VPC selected for this deployment
  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: For security reasons we recomend that you only enable your office range of IPs for external access to the Remote Desktop Gateways.  This
      should be a trusted network in CIDR form notation (X.X.X.X/X).  
    Type: String
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base
    Description: Unless advised, do not change this value
  MultiAZAppServers:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: This will increase the cost of the environment, but will provide at minimum 2 application servers in the solution.
    Type: String
  EnableAutoScaling:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: This will potentially increase the cost of the environment, however, if you would like to have the ODS/API Servers scale up and down based on demand, you can enable this feature.
    Type: String
  DBEngine:
    Description: The database engine software
    Type: String
    AllowedValues:
      - PostgreSQL
      - SQLServer
    ConstraintDescription: Choose a support database engine
    Default: PostgreSQL  
  DatabaseData:
    Type: String
    Default: populated
    AllowedValues:
      - minimal
      - populated
  MultiAZRDS:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Would you like your database to be highly available?  This will increase the cost of the environment, but provide for an immediate failover database in the solution.
    Type: String
  AdminPasswordAPI:
    Description: Password for the ODS API server local administrator account. Must be at
      least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  AdminPasswordRDGW:
    Description: Password for the Remote Desktop Gateway local administrator account.
      Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  AdminPassword:
    Description: REMOVE text below to enter your own password. Password for the Admin Application server local administrator account. Must be at
      least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    Default: 'LeaveItAsIs2!'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  DatabasePassword:
    Description: Password for the Database administrator account. Must be at least
      8 characters containing letters, numbers, and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true' 
Mappings: 
  SourceTemplateLocation:
    S3Location:
      "S3SourceBucket": "edfi-aws-quick-deployment" 
  RegionMapForFiles: 
    us-east-1: 
      "S3BucketRegion": "edfi-aws-quick-deployment"
    us-east-2: 
      "S3BucketRegion": "edfi-aws-quick-deployment-us-east-2"
    us-west-2: 
      "S3BucketRegion": "edfi-aws-quick-deployment-us-west-2"
  SQLServerInformation:
    EngineVersion:
      "Thirteen": "13.00.5598.27.v1"
      "Fourteen": "14.00.3281.6.v1"
    EngineEdition:
      "Standard": "sqlserver-se"
      "Enterprise": "sqlserver-ee"
    AccountInfo: 
      "DBUsername": "sqlsa"
    DBSize:
      "small": "db.m5.large"
      "medium" : "db.m5.large"
      "large": "db.t3.xlarge"
      "xlarge": "db.t3.2xlarge"
    AppServerSize:
      "small": "t3.medium"
      "medium": "t3.large"
      "large": "t3.large"
      "xlarge": "t3.large"
    AdminServerSize:
      "small": "t3.medium"
      "medium" : "t3.medium"
      "large": "t3.medium"
      "xlarge": "t3.medium"
    RDGWServerSize:
      "small": "t3.medium"
      "medium": "t3.medium"
      "large": "t3.medium"
      "xlarge": "t3.medium"
  PostgreSQLInformation:
    EngineVersion:
      "Eleven": "11.7"
    EngineEdition:
      "Standard": "postgres"
    AccountInfo: 
      "DBUsername": "postgres"
    DBSize:
      "small": "db.t3.medium"
      "medium": "db.t3.medium"
      "large": "db.t3.large"
      "xlarge": "db.t3.xlarge"
    AppServerSize:
      "small": "t3.medium"
      "medium": "t3.large"
      "large": "t3.large"
      "xlarge": "t3.large"
    AdminServerSize:
      "small": "t3.medium"
      "medium": "t3.medium"
      "large": "t3.medium"
      "xlarge": "t3.medium"
    RDGWServerSize:
      "small": "t3.medium"
      "medium": "t3.medium"
      "large": "t3.medium"
      "xlarge": "t3.medium"  
Conditions:
  UsePopulatedData: !Equals
    - !Ref 'DatabaseData'
    - populated
  InstallSwagger: !Equals
    - !Ref 'UseSwagger'
    - 'yes'
  NonProdEnvironment: !Equals
    - !Ref 'Environment'
    - nonprod
  ProdEnvironment: !Equals
    - !Ref 'Environment'
    - prod
  SwaggerInProd: !And
    - !Condition 'ProdEnvironment'
    - !Condition 'InstallSwagger'
  SwaggerInNonProd: !And
    - !Condition 'NonProdEnvironment'
    - !Condition 'InstallSwagger'
  UseMultiAZRDS: !Equals
    - !Ref 'MultiAZRDS'
    - 'true'
  UseTwoAppServers: !Equals
    - !Ref 'MultiAZAppServers'
    - 'true'
  UseAutoScaling: !Equals
    - !Ref 'EnableAutoScaling'
    - 'true'
  UseSQLServer: !Equals
    - !Ref 'DBEngine'
    - 'SQLServer'
  UsePostgres: !Equals
    - !Ref 'DBEngine'
    - 'PostgreSQL'
Resources:
  IamAndSecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-iam-roles-security-groups.yml'
      Parameters:
        VPCID: !Ref 'VPCID'
        DBEngine: !Ref 'DBEngine'
        EnvLabel: !Ref 'EnvLabel'
        RDGWCIDR: !Ref 'RDGWCIDR'
        SQLEngineEdition: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, EngineEdition, Standard ]
          - Fn::FindInMap: [ PostgreSQLInformation, EngineEdition, Standard ]
        S3SourceBucket: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
  KMSKeyStack:
    DependsOn: IamAndSecurityGroupsStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/aws-edfi-kms-key.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        KMSKeyName: 'edfi-kms-key'
  LambdaCoreStack:
    DependsOn: KMSKeyStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/lambda-core-functions.yml'
      Parameters:
        S3BucketSourceCode: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        S3KeySourceCode: lambdas
        S3BucketSecureStore: !Ref 'S3BucketSecureStore'
        VPCID: !Ref 'VPCID'
        PrivateSubnetID1: !Ref 'PrivateSubnet1ID'
        PrivateSubnetID2: !Ref 'PrivateSubnet2ID'
        LambdaRestoreSGID: !GetAtt 'IamAndSecurityGroupsStack.Outputs.MsSqlDBLambdaFunctionRestoreSGID'
        EnvLabel: !Ref 'EnvLabel'
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
        CreateMultiAZFunction: !Ref 'MultiAZRDS'
        DBEngine: !Ref 'DBEngine'
  LambdaCustomResourcesStack:
    DependsOn: LambdaCoreStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/lambda-core-custom-resources.yml'
      Parameters:
        S3BucketSecureStore: !Ref 'S3BucketSecureStore'
        EnvLabel: !Ref 'EnvLabel'
        KmsKeyId: !GetAtt 'KMSKeyStack.Outputs.KeyId'
        RDGWPassword: !Ref 'AdminPasswordRDGW'
        AdminAppPassword: !Ref 'AdminPassword'
        OdsApiPassword: !Ref 'AdminPasswordAPI'
        RDSPassword: !Ref 'DatabasePassword'
  DatabaseStack:
    DependsOn: LambdaCustomResourcesStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-rds.yml'
      Parameters:
        Environment: !Ref 'Environment'
        EnvLabel: !Ref 'EnvLabel'
        RDSOptionGroup: !If [UseSQLServer, !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDSOptionGroupName', !Ref "AWS::NoValue"]
        SQLMasterUserPassword: !Ref 'DatabasePassword'
        SQLMasterUserName: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AccountInfo, DBUsername ]
          - Fn::FindInMap: [ PostgreSQLInformation, AccountInfo, DBUsername ]
        VolumeSize: '100'
        SQLEngineEdition: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, EngineEdition, Standard ]
          - Fn::FindInMap: [ PostgreSQLInformation, EngineEdition, Standard ]
        SQLEngineVersion: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, EngineVersion, Thirteen ]
          - Fn::FindInMap: [ PostgreSQLInformation, EngineVersion, Eleven ]
        DBInstanceClass: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, DBSize, !Ref EnvironmentSize  ]
          - Fn::FindInMap: [ PostgreSQLInformation, DBSize, !Ref EnvironmentSize ]
        PrivateSubnet1ID: !Ref 'PrivateSubnet1ID'
        PrivateSubnet2ID: !Ref 'PrivateSubnet2ID'
        RDSSecurityGroupID: !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDSSecurityGroupID'
        VPCID: !Ref 'VPCID'
  LambdaRDSRestoreStack:
    DependsOn: DatabaseStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/mssql-db-restore-databases.yml'
      Parameters:
        RDSUsername: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AccountInfo, DBUsername ]
          - Fn::FindInMap: [ PostgreSQLInformation, AccountInfo, DBUsername ]
        RDSPassword: !Ref 'DatabasePassword'
        RDSHost: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DBEngine: !Ref 'DBEngine'
        RestoreAdminDB: 'yes'
        RestoreSecurityDB: 'yes'
        RestoreMinimalDB: !If
          - UsePopulatedData
          - 'no'
          - 'yes'
        RestorePopulatedDB: !If
          - UsePopulatedData
          - 'yes'
          - 'no'
        RestoreEmptyDB: 'no'
        S3SourceBucket: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        S3SourceKeyName: !Join
          - '/'
          - - 'sqlserver'
            - !Ref 'Version'
        AdminDBBakS3Name: EdFi_Admin
        SecurityDBBakS3Name: EdFi_Security
        MinimalDBBakS3Name: EdFi_Ods_Minimal_Template
        PopulatedDBBakS3Name: EdFi_Ods_Populated_Template
        EmptyDBBakS3Name: EdFi_ODS
        LambdaFunctionName: !GetAtt 'LambdaCoreStack.Outputs.MSSQLRestoreLambdaFunctionName'
  OdsApiELBStack:
    DependsOn: LambdaRDSRestoreStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-elb-tier.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        VPCID: !Ref 'VPCID'
        PublicSubnet1ID: !Ref 'PublicSubnet1ID'
        PublicSubnet2ID: !Ref 'PublicSubnet2ID'
        ELBSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationELBSecurityGroupID'
        SSLCertificateId: !Ref 'SSLCertificateId'
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
  AdminAppStack:
    Condition: ProdEnvironment
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-admin-app.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        AdminServerSubnets: !Join
          - ','
          - - !Ref 'PrivateSubnet1ID'
            - !Ref 'PrivateSubnet2ID'
        PublicSubnet1ID: !Ref 'PublicSubnet1ID'
        AdminPassword: !Ref 'AdminPassword'
        AdminUser: LocalAdmin
        PublicSubnet2ID: !Ref 'PublicSubnet2ID'
        VPCID: !Ref 'VPCID'
        LatestAmiId: !Ref 'LatestAmiId'
        AdminServerInstanceType: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AdminServerSize, !Ref EnvironmentSize  ]
          - Fn::FindInMap: [ PostgreSQLInformation, AdminServerSize, !Ref EnvironmentSize ]
        AdminServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.AdminAppServerSecurityGroupID'
        WebELBSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.AdminAppELBSecurityGroupID'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        DBEngine: !Ref 'DBEngine'
        DBUsername:  !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AccountInfo, DBUsername ]
          - Fn::FindInMap: [ PostgreSQLInformation, AccountInfo, DBUsername ]
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        Version: !Ref 'Version'
        DomainNameURL: !If
          - NonProdEnvironment
          - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
          - !Ref 'DomainName'
        S3BucketName: !FindInMap
          - SourceTemplateLocation
          - S3Location
          - S3SourceBucket
  ApplicationServerStack:
    Condition: ProdEnvironment
    DependsOn: AdminAppStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-application-tier.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        WebServerSubnets: !Join
          - ','
          - - !Ref 'PrivateSubnet1ID'
            - !Ref 'PrivateSubnet2ID'
        VPCID: !Ref 'VPCID'
        AdminUser: LocalAdmin
        AdminPassword: !Ref 'AdminPasswordAPI'
        LatestAmiId: !Ref 'LatestAmiId'
        WebServerInstanceType: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AppServerSize, !Ref EnvironmentSize  ]
          - Fn::FindInMap: [ PostgreSQLInformation, AppServerSize, !Ref EnvironmentSize ]
        WebServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationServerSecurityGroupID'
        ALBTargetGroupARN: !GetAtt 'OdsApiELBStack.Outputs.TargetGroupArn'
        EnableAutoScaling: !Ref 'EnableAutoScaling'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        Version: !Ref 'Version'
        DBEngine: !Ref 'DBEngine'
        DBUsername:  !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AccountInfo, DBUsername ]
          - Fn::FindInMap: [ PostgreSQLInformation, AccountInfo, DBUsername ]
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DomainNameURL: !If
          - NonProdEnvironment
          - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
          - !Ref 'DomainName'
        S3BucketName: !FindInMap
          - SourceTemplateLocation
          - S3Location
          - S3SourceBucket
        WebServerMinSize: '1'
        WebServerMaxSize: '4'
        WebServerDesiredCapacity: !If
          -  UseTwoAppServers
          - '2'
          - '1'
  NonProdStack:
    Condition: NonProdEnvironment
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-nonprod-server.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        ElbArn: !GetAtt 'OdsApiELBStack.Outputs.ELBArn'
        SSLCertificateId: !Ref 'SSLCertificateId'
        WebServerSubnetId: !Ref 'PrivateSubnet1ID'
        VPCID: !Ref 'VPCID'
        AdminUser: LocalAdmin
        AdminPassword: !Ref 'AdminPasswordAPI'
        LatestAmiId: !Ref 'LatestAmiId'
        WebServerInstanceType: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AppServerSize, !Ref EnvironmentSize  ]
          - Fn::FindInMap: [ PostgreSQLInformation, AppServerSize, !Ref EnvironmentSize ]
        WebServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationServerSecurityGroupID'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        Version: !Ref 'Version'
        DBEngine: !Ref 'DBEngine'
        DBUsername:  !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, AccountInfo, DBUsername ]
          - Fn::FindInMap: [ PostgreSQLInformation, AccountInfo, DBUsername ]
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DomainNameURL: !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        S3BucketName: !FindInMap
          - SourceTemplateLocation
          - S3Location
          - S3SourceBucket
  RDGWStack:
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/edfi-ods-rdgw.template'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        AdminPassword: !Ref 'AdminPasswordRDGW'
        AdminUser: LocalAdmin
        DomainDNSName: edfiquickdeploy.local
        KeyPairName: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        SecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDPServerSecurityGroupID'
        NumberOfRDGWHosts: '1'
        PublicSubnet1ID: !Ref 'PublicSubnet1ID'
        PublicSubnet2ID: !Ref 'PublicSubnet2ID'
        LatestAmiId: !Ref 'LatestAmiId'
        RDGWInstanceType: !If 
          - UseSQLServer 
          - Fn::FindInMap: [ SQLServerInformation, RDGWServerSize, !Ref EnvironmentSize  ]
          - Fn::FindInMap: [ PostgreSQLInformation, RDGWServerSize, !Ref EnvironmentSize ]
        VPCID: !Ref 'VPCID'
  PostInstallLambdaTasksMultiAZRDS:
    Condition: UseMultiAZRDS
    DependsOn: RDGWStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - 'https://'
          - !FindInMap
            - SourceTemplateLocation
            - S3Location
            - S3SourceBucket
          - '.s3.amazonaws.com/templates/lambda-prod-custom-resources.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        RDSName: !GetAtt 'DatabaseStack.Outputs.RDSName'
Outputs:
  OdsApiDnsName:
    Condition: ProdEnvironment
    Description: The DNS name of the ODS API suite that you should use to create a
      CNAME/ALIAS DNS record to point to your own Domain e.g. mysite.com
    Value: !GetAtt 'OdsApiELBStack.Outputs.ELBURL'
  OdsApiProdURL:
    Condition: ProdEnvironment
    Description: The URL of the ODS/API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref 'DomainName'
        - /EdFi.Ods.WebApi
  OdsApiNonProdURL:
    Condition: NonProdEnvironment
    Description: The URL of the ODS/API endpoint
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - /EdFi.Ods.WebApi
  AdminAppNonProdURL:
    Condition: NonProdEnvironment
    Description: The URL of the Admin Application.  Provide username of 'LocalAdmin'
      and the password you provided for the Admin Application Server in the CF template
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - :444/AdminApp
  AdminAppProdURL:
    Condition: ProdEnvironment
    Description: The URL of the Admin Application.  Provide username of 'LocalAdmin'
      and the password you provided for the Admin Application Server in the CF template
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'AdminAppStack.Outputs.ELBURL'
        - /AdminApp
  SwaggerUINonProdURL:
    Condition: SwaggerInNonProd
    Description: The URL of the SwaggerUI endpoint
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - /EdFi.Ods.SwaggerUI
  SwaggerUIProdURL:
    Condition: SwaggerInProd
    Description: The URL of the SwaggerUI endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref 'DomainName'
        - /EdFi.Ods.SwaggerUI
  DatabaseEndpoint:
    Description: The ODS API Database endpoint
    Value: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
  RemoteDesktopGatewayIP:
    Description: The IP of the Remote Desktop Gateway.  Provide username of 'LocalAdmin'
      and the password you provided for the RDP Server in the CF template
    Value: !GetAtt 'RDGWStack.Outputs.EIP1'
