AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates the application server tier of the Ed-Fi ODS/API Software
  Suite.  ** WARNING **  You will be billed for the AWS resources that are created
  from this template.  There is no cost to use this template, but are responsible
  for the costs incurred by the resources created in this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - WebServerSubnets
          - WebServerSecurityGroup
      - Label:
          default: Webserver Configuration
        Parameters:
          - AdminUser
          - AdminPassword
          - WebServerInstanceType
          - ALBTargetGroupARN
          - WebServerMinSize
          - WebServerMaxSize
          - WebServerDesiredCapacity
          - KeyPair
      - Label:
          default: EdFi ODS API Configuration
        Parameters:
          - EnvLabel
          - DomainNameURL
          - DBEndpointAddress
          - DBUsername
          - DBPassword
          - UseSwagger
          - SSLCertificateId
      - Label:
          default: EdFi Quick Deploy Configuration
        Parameters:
          - S3BucketName
    ParameterLabels:
      EnvLabel:
        default: Label your environment
      AdminUser:
        default: The Local Admin Account Username
      AdminPassword:
        default: The Local Administrator password for a new user
      WebServerSubnets:
        default: List of subnets in the VPC
      WebServerSecurityGroup:
        default: The Security Group ID of the Application Servers
      ALBTargetGroupARN:
        default: The AWS ARN of an existing target group to associate the servers
      VPCID:
        default: The VPC ID to use for the resources
      WebServerInstanceType:
        default: The EC2 instance type of the Application Server
      WebServerMinSize:
        default: Minimum number of application servers to have running
      WebServerMaxSize:
        default: Maximum number of application servers to have running
      WebServerDesiredCapacity:
        default: The desired number of applcation servers to be running
      KeyPair:
        default: EC2 KeyPair to assign to the instances
      DomainNameURL:
        default: Domain Name of the ODS API environment
      DBEndpointAddress:
        default: The RDS endpoint for the environment
      DBUsername:
        default: Database account username
      DBPassword:
        default: Database account password
      UseSwagger:
        default: Should the SwaggerUI be installed
      S3BucketName:
        default: The S3 bucket that provides the ODS API resources
Parameters:
  EnvLabel:
    Default: ''
    Type: String
    Description: Provide a label for your environment to identify resources easier.
  UseSwagger:
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'no'
    Description: Should the SwaggerUI be installed? (not recommended for Production
      environments).
    Type: String
  AdminUser:
    Description: User name for the new local administrator account
    Type: String
    Default: LocalAdmin
    MinLength: '5'
    MaxLength: '25'
    AllowedPattern: '[a-zA-Z0-9]*'
  AdminPassword:
    Description: Password for the ODS API Application local administrative account.
      Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  S3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: AWS S3 bucket name can include numbers, lowercase letters,
      uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: edfi-aws-quick-deploy
    Description: S3 bucket name for the EdFi Quick Deploy assets. AWS S3 bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  WebServerSubnets:
    ConstraintDescription: must be list of existing subnet Ids
    Default: ''
    Description: A list of subnet identifiers of Amazon VPCs where the WebServer Autoscaling
      would be launched.
    Type: List<AWS::EC2::Subnet::Id>
  WebServerInstanceType:
    AllowedValues:
      - t3.medium
      - t3.large
      - t2.medium
      - t2.large
      - m5.large
      - m5.xlarge
    ConstraintDescription: Choose an instance type.
    Default: t2.medium
    Description: Web Server node instance type
    Type: String
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base
  WebServerSecurityGroup:
    Description: Web Server Security Group
    Type: AWS::EC2::SecurityGroup::Id
  ALBTargetGroupARN:
    Description: AWS ARN Value of an existin target group to associate with the auto-scaling
      group
    Type: String
  KeyPair:
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Default: id_rsa_aws
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  DomainNameURL:
    Description: The fully qualified domain name to be used for this ODS API environment
    Type: String
  DBEndpointAddress:
    Description: RDS DB Endpoint
    Type: String
  DBUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: sqlsa
    Description: The database account username
    MaxLength: '16'
    MinLength: '1'
    Type: String
  DBPassword:
    AllowedPattern: (?=\S)[^@/"\r\n\t\f\s]*
    ConstraintDescription: Min 8 chars.
    Description: The database account password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'True'
    Type: String
  WebServerMinSize:
    Default: '1'
    Description: Minimum number of web server instances in Auto Scaling group
    Type: Number
  WebServerMaxSize:
    Default: '4'
    Description: Maximum number of web server instances in Auto Scaling group
    Type: Number
  WebServerDesiredCapacity:
    Default: '1'
    Description: Desired number of web server instances in Auto Scaling group
    Type: Number
  VPCID:
    Description: Select the VPC to use
    Type: AWS::EC2::VPC::Id
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets provided must in the VPC selected for use
Resources:
  WebServerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
  WebServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'WebServerInstanceRole'
  WebServerIAMPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - WebServerInstanceRole
    Properties:
      PolicyName: !Join
        - ''
        - - AppServerIAMPolicy
          - '-'
          - !Ref 'EnvLabel'
          - -policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:List*
              - s3:GetObject
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref 'S3BucketName'
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref 'S3BucketName'
                  - /*
      Roles:
        - !Ref 'WebServerInstanceRole'
  WebServerAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref 'WebServerLC'
      MinSize: !Ref 'WebServerMinSize'
      MaxSize: !Ref 'WebServerMaxSize'
      DesiredCapacity: !Ref 'WebServerDesiredCapacity'
      TargetGroupARNs:
        - !Ref 'ALBTargetGroupARN'
      VPCZoneIdentifier: !Ref 'WebServerSubnets'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Application Server
              - !Ref 'EnvLabel'
          PropagateAtLaunch: 'true'
        - Key: Environment
          Value: !Ref 'EnvLabel'
          PropagateAtLaunch: 'true'
  WebServerLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          buckets:
            - !Ref 'S3BucketName'
          roleName: !Ref 'WebServerInstanceRole'
      AWS::CloudFormation::Init:
        configSets:
          defaultorder:
            - config1
            - config2
        config1:
          files:
            c:\cfn\cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackName'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
            c:\cfn\hooks.d\cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.WebServerLC.Metadata.AWS::CloudFormation::Init\n"
                  - 'action=cfn-init.exe -v -s '
                  - !Ref 'AWS::StackName'
                  - ' -r WebServerLC'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - "\n"
            C:\ODS-API-and-Swagger-Server-Install.ps1:
              source: !Join
                - ''
                - - https://
                  - !Ref 'S3BucketName'
                  - .s3.amazonaws.com/scripts/ODS-API-and-Swagger-Server-Install.ps1
            C:\Create-LocalUser.ps1:
              source: !Join
                - ''
                - - https://
                  - !Ref 'S3BucketName'
                  - .s3.amazonaws.com/scripts/Create-LocalUser.ps1
          commands:
            a-create-admin:
              command: !Join
                - ''
                - - 'powershell.exe -Command c:\Create-LocalUser.ps1 -AdminUser '
                  - !Ref 'AdminUser'
                  - ' -AdminPassword '
                  - ''''
                  - !Ref 'AdminPassword'
                  - ''''
              waitAfterCompletion: '0'
            b-set-admin-group:
              command: !Join
                - ''
                - - 'net localgroup Administrators '
                  - !Ref 'AdminUser'
                  - ' /ADD'
              waitAfterCompletion: '0'
        config2:
          commands:
            1-executeinstall:
              command: !Join
                - ''
                - - powershell -command C:\ODS-API-and-Swagger-Server-Install.ps1
                    -verb runas -DatabaseHost '
                  - !Ref 'DBEndpointAddress'
                  - ''' -DatabaseUser '''
                  - !Ref 'DBUsername'
                  - ''' -DatabasePassword '''
                  - !Ref 'DBPassword'
                  - ''' -DomainName '''
                  - !Ref 'DomainNameURL'
                  - ''' -InstallSwagger '''
                  - !Ref 'UseSwagger'
                  - ''' -S3Bucket '''
                  - !Ref 'S3BucketName'
                  - ''''
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - c:\cfn\cfn-hup.conf
                  - c:\cfn\hooks.d\cfn-auto-reloader.conf
    Properties:
      ImageId: !Ref 'LatestAmiId'
      InstanceType: !Ref 'WebServerInstanceType'
      IamInstanceProfile: !Ref 'WebServerInstanceProfile'
      SecurityGroups:
        - !Ref 'WebServerSecurityGroup'
      KeyName: !Ref 'KeyPair'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<script>\n"
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackName'
            - ' -r WebServerLC -c defaultorder'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
            - 'cfn-signal.exe -e %ERRORLEVEL% '
            - ' --stack '
            - !Ref 'AWS::StackId'
            - ' --resource WebServerAsg'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
            - </script>
Outputs: {}
