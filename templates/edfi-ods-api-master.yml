AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates a new VPC and deploys the Ed-Fi ODS/API Software Suite.  **
  WARNING **  You will be billed for the AWS resources that are created from this
  template.  There is no cost to use this template, but are responsible for the costs
  incurred by the resources created in this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EdFi ODS API Environment Information
        Parameters:
          - Environment
          - EnvLabel
          - AvailabilityZones
          - DomainName
          - SSLCertificateId
          - S3BucketSecureStore
          - DatabaseData
          - UseSwagger
          - EncryptAtRest
          - MultiAZRDS
          - DatabasePassword
          - AdminPasswordAPI
          - AdminPassword
          - AdminPasswordRDGW
          - RDGWCIDR
          - S3BucketName
      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - LatestAmiId
          - RDGWInstanceType
          - AppServerInstanceType
      - Label:
          default: Database configuration
        Parameters:
          - RDSInstanceType
          - SQLEngineEdition
          - SQLEngineVersion
          - RDSVolumeSize
          - SQLMasterUserName
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones (2)
      VPCCIDR:
        default: VPC CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      DatabaseData:
        default: Initial ODS API Database Data Set
      MultiAZRDS:
        default: Highly Available Database
      RDSInstanceType:
        default: RDS Instance type
      LatestAmiId:
        default: ' Latest AMI ID'
      RDGWInstanceType:
        default: Remote Desktop Gateway instance type
      AppServerInstanceType:
        default: Application Server instance type
      Environment:
        default: Type of environment
      EnvLabel:
        default: Label your environment
      S3BucketName:
        default: Ed-Fi Quick Deploy bucket name
      S3BucketSecureStore:
        default: S3 location to store your own secure files
      RDGWCIDR:
        default: Network Address range (CIDR) to allow connections to Remote Desktop Gateway
      RDSVolumeSize:
        default: RDS data volume size
      SQLEngineEdition:
        default: MSSQL database engine edition
      SQLEngineVersion:
        default: MSSQL database engine version
      SQLMasterUserName:
        default: SQL Server master user name
      UseSwagger:
        default: Install the SwaggerUI into the environment
      EncryptAtRest:
        default: Encrypt the database at-rest
      DomainName:
        default: Domain Name that matches the SSL certificate for the ODS/API environment
      AdminPassword:
        default: A password for the local admininstrator accounts on the Admin Server
      AdminPasswordAPI:
        default: A password for the local admininstrator accounts on the ODS API Server
      AdminPasswordRDGW:
        default: A password for the local admininstrator accounts on the RDP Server
      DatabasePassword:
        default: A password for the database account
      SSLCertificateId:
        default: The ARN of a SSL certificate ID
Parameters:
  Environment:
    AllowedValues:
      - prod
      - nonprod
    Default: nonprod
    Description: Select the type of environment to launch.  Prod is highly available,
      while nonprod is cheaper and useful for test environments.
    Type: String
  EnvLabel:
    Description: Provide a unique label for your environment to identify resources
      easier.
    Type: String
  UseSwagger:
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'no'
    Description: Should the SwaggerUI be installed? (not recommended for Production
      environments).
    Type: String
  SSLCertificateId:
    Default: ''
    Description: The ARN of the SSL certificate in the AWS ACM service to use for
      the ODS API environment.
    Type: String
  DomainName:
    Description: The fully qualified domain name in a URL to be used for this ODS
      API environment (e.g. edfi.domain.com)
    Type: String
  S3BucketName:
    AllowedValues:
      - edfi-aws-quick-deployment
    Default: edfi-aws-quick-deployment
    Description: S3 bucket name for the Ed-Fi Quick Deploy Assets.  You cannot change
      this value.
    Type: String
  S3BucketSecureStore:
    Type: String
    Default: ''
    Description: The name of the S3 bucket in YOUR AWS account that can be used to
      store the SSH Private Key pair file.
  AvailabilityZones:
    Description: A List of Availability Zones to use for the subnets in the VPC. You
      only will need to select two Availability Zones.
    Type: List<AWS::EC2::AvailabilityZone::Name>
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public subnet 1 located in Availability Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability
      Zone 2.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  RDGWInstanceType:
    Description: Amazon EC2 instance type for the first Remote Desktop Gateway instance
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: For security reasons we recomend that you only enable your office range of IPs for external access to the Remote Desktop Gateways.  This
      should be a trusted network in CIDR form notation (X.X.X.X/X).  
    Type: String
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base
    Description: Unless advised, do not change this value
  AppServerInstanceType:
    AllowedValues:
      - t3.medium
      - t3.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
    ConstraintDescription: Must contain valid instance type
    Default: t3.large
    Description: Type of EC2 instance for the application server instances.
    Type: String
  RDSInstanceType:
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: Must select a valid database instance type.
    Default: db.m5.large
    Description: The name of the compute and memory capacity class of the database
      instance.
    Type: String
  DatabaseData:
    Type: String
    Default: minimal
    AllowedValues:
      - minimal
      - populated
  MultiAZRDS:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Would you like your database to be highly available?  This will increase the cost of the environment, but provide for an immediate failover database in the solution.
    Type: String
  SQLEngineEdition:
    AllowedValues:
      - sqlserver-ee
      - sqlserver-se
    ConstraintDescription: Must select a MSSQL Database Engine Edition.
    Default: sqlserver-se
    Description: MSSQL Database Engine Edition.
    Type: String
  SQLEngineVersion:
    AllowedValues:
      - 13.00.5292.0.v1
    ConstraintDescription: The ODS Software Suite requires this MSSQL Database Engine
      Version.
    Default: 13.00.5292.0.v1
    Description: MSSQL Database Engine Version.
    Type: String
  SQLMasterUserName:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: sqlsa
    Description: SQL Server master user name.
    MaxLength: '25'
    MinLength: '5'
    Type: String
  RDSVolumeSize:
    Default: '100'
    Description: RDS Volume size for the SQL Data, Logs and TempDb volumes, in GiB
    MaxValue: '16000'
    MinValue: '100'
    Type: Number
  EncryptAtRest:
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
    Default: 'true'
    Description: Enable database encryption at-rest
  AdminPassword:
    Description: Password for the Admin Application local administrative account.
      Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  AdminPasswordAPI:
    Description: Password for the ODS API local administrative account. Must be at
      least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  AdminPasswordRDGW:
    Description: Password for the Remote Desktop Gateway local administrative account.
      Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true'
  DatabasePassword:
    Description: Password for the Database administrator account. Must be at least
      8 characters containing letters, numbers, and symbols
    Type: String
    MinLength: '8'
    MaxLength: '32'
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    NoEcho: 'true' 
Mappings: 
  RegionMapForFiles: 
    us-east-1: 
      "S3BucketRegion": "edfi-aws-quick-deployment"
    us-east-2: 
      "S3BucketRegion": "edfi-aws-quick-deployment-us-east-2"
    us-west-2: 
      "S3BucketRegion": "edfi-aws-quick-deployment-us-west-2"
Conditions:
  UsePopulatedData: !Equals
    - !Ref 'DatabaseData'
    - populated
  InstallSwagger: !Equals
    - !Ref 'UseSwagger'
    - 'yes'
  NonProdEnvironment: !Equals
    - !Ref 'Environment'
    - nonprod
  ProdEnvironment: !Equals
    - !Ref 'Environment'
    - prod
  SwaggerInProd: !And
    - !Condition 'ProdEnvironment'
    - !Condition 'InstallSwagger'
  SwaggerInNonProd: !And
    - !Condition 'NonProdEnvironment'
    - !Condition 'InstallSwagger'
  UseMultiAZRDS: !Equals
    - !Ref 'MultiAZRDS'
    - 'true'
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/aws-vpc.template'
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref 'AvailabilityZones'
        NumberOfAZs: '2'
        VPCCIDR: !Ref 'VPCCIDR'
        PublicSubnet1CIDR: !Ref 'PublicSubnet1CIDR'
        PublicSubnet2CIDR: !Ref 'PublicSubnet2CIDR'
        PrivateSubnet1ACIDR: !Ref 'PrivateSubnet1CIDR'
        PrivateSubnet2ACIDR: !Ref 'PrivateSubnet2CIDR'
  IamAndSecurityGroupsStack:
    DependsOn: VPCStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-iam-roles-security-groups.yml'
      Parameters:
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        EnvLabel: !Ref 'EnvLabel'
        S3SourceBucket: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
  KMSKeyStack:
    DependsOn: IamAndSecurityGroupsStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/aws-edfi-kms-key.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
  LambdaCoreStack:
    DependsOn: KMSKeyStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/lambda-core-functions.yml'
      Parameters:
        S3BucketSourceCode: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        S3KeySourceCode: lambdas
        S3BucketSecureStore: !Ref 'S3BucketSecureStore'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        PrivateSubnetID1: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnetID2: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        LambdaRestoreSGID: !GetAtt 'IamAndSecurityGroupsStack.Outputs.MsSqlDBLambdaFunctionRestoreSGID'
        EnvLabel: !Ref 'EnvLabel'
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
        CreateMultiAZFunction: !Ref 'MultiAZRDS'
  LambdaCustomResourcesStack:
    DependsOn: LambdaCoreStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/lambda-core-custom-resources.yml'
      Parameters:
        S3BucketSecureStore: !Ref 'S3BucketSecureStore'
        EnvLabel: !Ref 'EnvLabel'
        KmsKeyId: !GetAtt 'KMSKeyStack.Outputs.KeyId'
        RDGWPassword: !Ref 'AdminPasswordRDGW'
        AdminAppPassword: !Ref 'AdminPassword'
        OdsApiPassword: !Ref 'AdminPasswordAPI'
        RDSPassword: !Ref 'DatabasePassword'
  DatabaseStack:
    DependsOn: LambdaCustomResourcesStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-rds.yml'
      Parameters:
        Environment: !Ref 'Environment'
        EnvLabel: !Ref 'EnvLabel'
        RDSOptionGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDSOptionGroupName'
        SQLMasterUserPassword: !Ref 'DatabasePassword'
        SQLMasterUserName: !Ref 'SQLMasterUserName'
        VolumeSize: !Ref 'RDSVolumeSize'
        SQLEngineEdition: !Ref 'SQLEngineEdition'
        SQLEngineVersion: !Ref 'SQLEngineVersion'
        PrivateSubnet1ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        PrivateSubnet2ID: !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        DBInstanceClass: !Ref 'RDSInstanceType'
        RDSSecurityGroupID: !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDSSecurityGroupID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        Encrypt: !Ref 'EncryptAtRest'
  LambdaRDSRestoreStack:
    DependsOn: DatabaseStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/mssql-db-restore-databases.yml'
      Parameters:
        RDSUsername: !Ref 'SQLMasterUserName'
        RDSPassword: !Ref 'DatabasePassword'
        RDSHost: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        RestoreAdminDB: 'yes'
        RestoreSecurityDB: 'yes'
        RestoreMinimalDB: !If
          - UsePopulatedData
          - 'no'
          - 'yes'
        RestorePopulatedDB: !If
          - UsePopulatedData
          - 'yes'
          - 'no'
        RestoreEmptyDB: 'no'
        S3SourceBucket: !FindInMap
          - RegionMapForFiles
          - !Ref 'AWS::Region'
          - S3BucketRegion
        S3SourceKeyName: sqlserver
        AdminDBBakS3Name: EdFi_Admin.bak
        SecurityDBBakS3Name: EdFi_Security.bak
        MinimalDBBakS3Name: EdFi_Ods_Minimal_Template.bak
        PopulatedDBBakS3Name: EdFi_Ods_Populated_Template.bak
        EmptyDBBakS3Name: EdFi_ODS.bak
        LambdaFunctionName: !GetAtt 'LambdaCoreStack.Outputs.MSSQLRestoreLambdaFunctionName'
  OdsApiELBStack:
    DependsOn: LambdaRDSRestoreStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-elb-tier.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        ELBSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationELBSecurityGroupID'
        SSLCertificateId: !Ref 'SSLCertificateId'
        NonProdEnv: !If
          - NonProdEnvironment
          - 'true'
          - 'false'
  AdminAppStack:
    Condition: ProdEnvironment
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-admin-app.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        AdminServerSubnets: !Join
          - ','
          - - !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
            - !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        AdminPassword: !Ref 'AdminPassword'
        AdminUser: LocalAdmin
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        AdminServerInstanceType: !Ref 'AppServerInstanceType'
        AdminServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.AdminAppServerSecurityGroupID'
        WebELBSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.AdminAppELBSecurityGroupID'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        DBUsername: !Ref 'SQLMasterUserName'
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DomainNameURL: !If
          - NonProdEnvironment
          - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
          - !Ref 'DomainName'
        S3BucketName: !Ref 'S3BucketName'
  ApplicationServerStack:
    Condition: ProdEnvironment
    DependsOn: AdminAppStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-application-tier.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        WebServerSubnets: !Join
          - ','
          - - !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
            - !GetAtt 'VPCStack.Outputs.PrivateSubnet2AID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        AdminUser: LocalAdmin
        AdminPassword: !Ref 'AdminPasswordAPI'
        WebServerInstanceType: !Ref 'AppServerInstanceType'
        WebServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationServerSecurityGroupID'
        ALBTargetGroupARN: !GetAtt 'OdsApiELBStack.Outputs.TargetGroupArn'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        DBUsername: !Ref 'SQLMasterUserName'
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DomainNameURL: !If
          - NonProdEnvironment
          - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
          - !Ref 'DomainName'
        S3BucketName: !Ref 'S3BucketName'
        WebServerMinSize: !If
          - ProdEnvironment
          - '2'
          - '1'
        WebServerMaxSize: !If
          - ProdEnvironment
          - '4'
          - '1'
        WebServerDesiredCapacity: !If
          - ProdEnvironment
          - '2'
          - '1'
  NonProdStack:
    Condition: NonProdEnvironment
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-nonprod-server.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        WebServerSubnetId: !GetAtt 'VPCStack.Outputs.PrivateSubnet1AID'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
        AdminUser: LocalAdmin
        AdminPassword: !Ref 'AdminPasswordAPI'
        WebServerInstanceType: !Ref 'AppServerInstanceType'
        WebServerSecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.ApplicationServerSecurityGroupID'
        KeyPair: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        UseSwagger: !Ref 'UseSwagger'
        DBUsername: !Ref 'SQLMasterUserName'
        DBPassword: !Ref 'DatabasePassword'
        DBEndpointAddress: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
        DomainNameURL: !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        S3BucketName: !Ref 'S3BucketName'
  RDGWStack:
    DependsOn: OdsApiELBStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/edfi-ods-rdgw.template'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        AdminPassword: !Ref 'AdminPasswordRDGW'
        AdminUser: LocalAdmin
        DomainDNSName: edfiquickdeploy.local
        KeyPairName: !GetAtt 'LambdaCustomResourcesStack.Outputs.KeyPairName'
        SecurityGroup: !GetAtt 'IamAndSecurityGroupsStack.Outputs.RDPServerSecurityGroupID'
        NumberOfRDGWHosts: '1'
        PublicSubnet1ID: !GetAtt 'VPCStack.Outputs.PublicSubnet1ID'
        PublicSubnet2ID: !GetAtt 'VPCStack.Outputs.PublicSubnet2ID'
        RDGWInstanceType: !Ref 'RDGWInstanceType'
        VPCID: !GetAtt 'VPCStack.Outputs.VPCID'
  PostInstallLambdaTasksNonProd:
    Condition: NonProdEnvironment
    DependsOn: NonProdStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/lambda-nonprod-custom-resources.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        InstanceID1: !GetAtt 'NonProdStack.Outputs.Ec2InstanceId'
        ELBName1: !GetAtt 'OdsApiELBStack.Outputs.ELBName'
  PostInstallLambdaTasksMultiAZRDS:
    Condition: UseMultiAZRDS
    DependsOn: RDGWStack
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${S3BucketName}.s3.amazonaws.com/templates/lambda-prod-custom-resources.yml'
      Parameters:
        EnvLabel: !Ref 'EnvLabel'
        RDSName: !GetAtt 'DatabaseStack.Outputs.RDSName'
Outputs:
  OdsApiDnsName:
    Condition: ProdEnvironment
    Description: The DNS name of the ODS API suite that you should use to create a
      CNAME/ALIAS DNS record to point to your own Domain e.g. mysite.com
    Value: !GetAtt 'OdsApiELBStack.Outputs.ELBURL'
  OdsApiProdURL:
    Condition: ProdEnvironment
    Description: The URL of the ODS/API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref 'DomainName'
        - /EdFi.Ods.WebApi
  OdsApiNonProdURL:
    Condition: NonProdEnvironment
    Description: The URL of the ODS/API endpoint
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - /EdFi.Ods.WebApi
  AdminAppNonProdURL:
    Condition: NonProdEnvironment
    Description: The URL of the Admin Application.  Provide username of 'LocalAdmin'
      and the password you provided for the Admin Application Server in the CF template
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - :444/AdminApp
  AdminAppProdURL:
    Condition: ProdEnvironment
    Description: The URL of the Admin Application.  Provide username of 'LocalAdmin'
      and the password you provided for the Admin Application Server in the CF template
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'AdminAppStack.Outputs.ELBURL'
        - /AdminApp
  SwaggerUINonProdURL:
    Condition: SwaggerInNonProd
    Description: The URL of the SwaggerUI endpoint
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'OdsApiELBStack.Outputs.ELBURLNonProd'
        - /EdFi.Ods.SwaggerUI
  SwaggerUIProdURL:
    Condition: SwaggerInProd
    Description: The URL of the SwaggerUI endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref 'DomainName'
        - /EdFi.Ods.SwaggerUI
  DatabaseEndpoint:
    Description: The ODS API Database endpoint
    Value: !GetAtt 'DatabaseStack.Outputs.RDSSQLEndpoint'
  RemoteDesktopGatewayIP:
    Description: The IP of the Remote Desktop Gateway.  Provide username of 'LocalAdmin'
      and the password you provided for the RDP Server in the CF template
    Value: !GetAtt 'RDGWStack.Outputs.EIP1'
