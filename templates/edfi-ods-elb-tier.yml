AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates the ODS API load balancer for the application tier of the
  Ed-Fi ODS/API Software Suite.  ** WARNING **  You will be billed for the AWS resources
  that are created from this template.  There is no cost to use this template, but
  are responsible for the costs incurred by the resources created in this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - ELBSecurityGroup
          - PublicSubnet1ID
          - PublicSubnet2ID
      - Label:
          default: EdFi ODS API Configuration
        Parameters:
          - EnvLabel
          - NonProdEnv
          - SSLCertificateId
    ParameterLabels:
      EnvLabel:
        default: Label your environment
      ELBSecurityGroup:
        default: The Security Group ID to use for the ELB
      PublicSubnet1ID:
        default: A Subnet ID of a public subnet to use for the ELB
      PublicSubnet2ID:
        default: A Subnet ID of a public subnet to use for the ELB
      VPCID:
        default: The VPC ID to use for the resources
      SSLCertificateId:
        default: The ARN of a SSL certificate ID
      NonProdEnv:
        default: Non Production Environment
Parameters:
  EnvLabel:
    Default: ''
    Type: String
    Description: Provide a label for your environment to identify resources easier.
  ELBSecurityGroup:
    Description: Elastic Load Balancer Security Group ID
    Type: AWS::EC2::SecurityGroup::Id
  VPCID:
    Description: Select the VPC used to create the ELB
    Type: AWS::EC2::VPC::Id
  PublicSubnet1ID:
    Description: Public Subnet ID 1 located in Availability Zone 1
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: Public Subnet ID 2 located in Availability Zone 2
    Type: AWS::EC2::Subnet::Id
  SSLCertificateId:
    Default: ''
    Description: The ARN of the SSL certificate to use for the load balancer
    Type: String
  NonProdEnv:
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
    Description: Is this a Non-Production environment?
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets provided must in the VPC selected for use
Conditions:
  NonProdEnvironment: !Equals
    - !Ref 'NonProdEnv'
    - 'true'
  ProdEnvironment: !Equals
    - !Ref 'NonProdEnv'
    - 'false'
Resources:
  ApplicationLoadBalancer:
    Condition: ProdEnvironment
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref 'PublicSubnet1ID'
        - !Ref 'PublicSubnet2ID'
      SecurityGroups:
        - !Ref 'ELBSecurityGroup'
      Tags:
        - Key: Name
          Value: ODS API WebServer Load Balancer
        - Key: Environment
          Value: !Ref 'EnvLabel'
  ALBTargetGroup:
    Condition: ProdEnvironment
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref 'VPCID'
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '30'
  ALBHTTPSListener:
    Condition: ProdEnvironment
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'ALBTargetGroup'
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref 'SSLCertificateId'
  ALBHTTPListener:
    Condition: ProdEnvironment
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'ALBTargetGroup'
      LoadBalancerArn: !Ref 'ApplicationLoadBalancer'
      Port: 80
      Protocol: HTTP
  ElasticLoadBalancer:
    Condition: NonProdEnvironment
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
        - !Ref 'PublicSubnet1ID'
        - !Ref 'PublicSubnet2ID'
      Scheme: internet-facing
      CrossZone: 'true'
      SecurityGroups:
        - !Ref 'ELBSecurityGroup'
      Listeners:
        - LoadBalancerPort: '80'
          Protocol: HTTP
          InstancePort: '80'
          InstanceProtocol: HTTP
        - LoadBalancerPort: '443'
          Protocol: HTTPS
          InstancePort: '80'
          InstanceProtocol: HTTP
          SSLCertificateId: !Ref 'SSLCertificateId'
        - LoadBalancerPort: '444'
          Protocol: TCP
          InstancePort: '444'
          InstanceProtocol: TCP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '2'
        UnhealthyThreshold: '4'
        Interval: '30'
        Timeout: '20'
Outputs:
  ELBURL:
    Condition: ProdEnvironment
    Description: The DNS value of the ELB that is the AWS endpoint value for the ODS
      API application.
    Value: !GetAtt 'ApplicationLoadBalancer.DNSName'
    Export:
      Name: !Sub '${AWS::StackName}-ELBURL'
  ELBURLNonProd:
    Condition: NonProdEnvironment
    Description: The DNS value of the ELB that is the AWS endpoint value for the ODS
      API application.
    Value: !GetAtt 'ElasticLoadBalancer.DNSName'
    Export:
      Name: !Sub '${AWS::StackName}-ELBURL'
  ELBName:
    Condition: NonProdEnvironment
    Description: The AWS name of the Non Prod ELB for the ODS API environment
    Value: !Ref 'ElasticLoadBalancer'
    Export:
      Name: !Sub '${AWS::StackName}-ELBName'
  TargetGroupArn:
    Condition: ProdEnvironment
    Description: The ARN value of the Target Group in which to assign the ODS API
      servers
    Value: !Ref 'ALBTargetGroup'
    Export:
      Name: !Sub '${AWS::StackName}-TargetGroupArn'
