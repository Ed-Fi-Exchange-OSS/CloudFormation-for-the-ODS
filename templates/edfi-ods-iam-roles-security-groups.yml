AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates the required Security Groups, IAM requirements, and RDS parameter
  groups for the Ed-Fi ODS/API Software Suite.  ** WARNING **  You will be billed
  for the AWS resources that are created from this template.  There is no cost to
  use this template, but are responsible for the costs incurred by the resources created
  in this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Information
        Parameters:
          - NonProdEnv
          - S3SourceBucket
          - EnvLabel
          - DBEngine
          - SQLEngineEdition
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - RDGWCIDR
    ParameterLabels:
      EnvLabel:
        default: Label your environment
      VPCID:
        default: VPC ID
      RDGWCIDR:
        default: Allowed CIDR Block for external access to the Remote Desktop Gateway.
      S3SourceBucket:
        default: Ed-Fi Quick Deploy S3 Location for SQL Server Backup Files to Import
      DBEngine:
        default: RDS Engine Type
      SQLEngineEdition:
        default: RDS database engine edition
      NonProdEnv:
        default: Non Production Environment
Parameters:
  EnvLabel:
    Default: test
    Type: String
    Description: Provide a label for your environment to identify resources easier.
  VPCID:
    Default: ''
    Type: AWS::EC2::VPC::Id
    Description: VPC ID to create the security groups within the network
  RDGWCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: Allowed CIDR Block for external access to the Remote Desktop Gateways.  This
      should be a trusted network.
    Type: String
    Default: '0.0.0.0/0'
  S3SourceBucket:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: S3 bucket names can include numbers, lowercase letters,
      uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: edfi-aws-quick-deploy
    Description: S3 bucket name for the Ed-Fi Quick Deploy SQL bak files location on the region.
    Type: String
  DBEngine:
    Description: The database engine software
    Type: String
    AllowedValues:
      - PostgreSQL
      - SQLServer
    ConstraintDescription: Choose a support database engine
    Default: SQLServer
  SQLEngineEdition:
    Default: sqlserver-se
    Description: RDS Database Engine
    Type: String
  NonProdEnv:
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
    Description: Is this a Non-Production environment?
Conditions:
  NonProdEnvironment: !Equals
    - !Ref 'NonProdEnv'
    - 'true'
  ProdEnvironment: !Equals
    - !Ref 'NonProdEnv'
    - 'false'
  UseSQLServer: !Equals
    - !Ref 'DBEngine'
    - 'SQLServer'
  UsePostgres: !Equals
    - !Ref 'DBEngine'
    - 'PostgreSQL'
Resources:
  RDPServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-
          - !Ref 'EnvLabel'
          - -rdgw-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi RDGW server for the '
          - !Ref 'EnvLabel'
          - ' environment'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3389'
          ToPort: '3389'
          CidrIp: !Ref 'RDGWCIDR'
          Description: !Join
            - ''
            - - 'Allow RDP access to '
              - !Ref 'EnvLabel'
              - ' environment RDGW server'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'RDGWCIDR'
          Description: !Join
            - ''
            - - 'Allow HTTPS access to '
              - !Ref 'EnvLabel'
              - ' environment RDGW server'
        - IpProtocol: udp
          FromPort: '3391'
          ToPort: '3391'
          CidrIp: !Ref 'RDGWCIDR'
          Description: !Join
            - ''
            - - 'Allow UDP access for performance enhancements to '
              - !Ref 'EnvLabel'
              - ' environment RDGW server'
  ApplicationELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-
          - !Ref 'EnvLabel'
          - -elb-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi ODS ELB for the '
          - !Ref 'EnvLabel'
          - ' ELB'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: '0.0.0.0/0'
          FromPort: '80'
          ToPort: '80'
          Description: Allow access over HTTP to application
        - IpProtocol: tcp
          CidrIp: '0.0.0.0/0'
          FromPort: '443'
          ToPort: '443'
          Description: Allow access over HTTPS to application
  NonProdELBAdminAppIngressPort:
    Condition: NonProdEnvironment
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'ApplicationELBSecurityGroup'
      IpProtocol: tcp
      FromPort: 444
      ToPort: 444
      CidrIp: '0.0.0.0/0'
      Description: Allow access to the Admin Application
  ApplicationServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-
          - !Ref 'EnvLabel'
          - -server-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi EC2 application servers for the '
          - !Ref 'EnvLabel'
          - ' environment'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'ApplicationELBSecurityGroup'
          FromPort: '80'
          ToPort: '80'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' environment ELB'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RDPServerSecurityGroup'
          FromPort: '3389'
          ToPort: '3389'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' RDGW server'
  NonProdEc2AdminAppIngressPort:
    Condition: NonProdEnvironment
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'ApplicationServerSecurityGroup'
      IpProtocol: tcp
      FromPort: 444
      ToPort: 444
      Description: Allow access to the Admin Application on a NonProd server from
        the ELB
      SourceSecurityGroupId: !Ref 'ApplicationELBSecurityGroup'
  AdminAppELBSecurityGroup:
    Condition: ProdEnvironment
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-admin-app-
          - !Ref 'EnvLabel'
          - -elb-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi Admin App or the '
          - !Ref 'EnvLabel'
          - ' ELB'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: '0.0.0.0/0'
          FromPort: '443'
          ToPort: '443'
          Description: Allow access over HTTPS to application
  AdminAppServerSecurityGroup:
    Condition: ProdEnvironment
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-admin-app-
          - !Ref 'EnvLabel'
          - -server-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi EC2 Admin App server for the '
          - !Ref 'EnvLabel'
          - ' environment'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'AdminAppELBSecurityGroup'
          FromPort: '443'
          ToPort: '443'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' environment ELB'
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref 'RDPServerSecurityGroup'
          FromPort: '3389'
          ToPort: '3389'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' RDGW server'
  MsSqlDBLambdaFunctionRestoreSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Join
        - ''
        - - 'Lambda DB Restore Function Security Group for the  '
          - !Ref 'VPCID'
          - ' vpc'
      GroupName: !Join
        - ''
        - - edfi-ods-lambda-db-restore-
          - !Ref 'EnvLabel'
          - -environment
      VpcId: !Ref 'VPCID'
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join
        - ''
        - - edfi-ods-api-rds-
          - !Ref 'EnvLabel'
          - -database-access
      GroupDescription: !Join
        - ''
        - - 'Rules to allow access to EdFi RDS system in the '
          - !Ref 'EnvLabel'
          - ' environment'
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !If [ UsePostgres, '5432','1433']
          ToPort: !If [ UsePostgres, '5432','1433']
          SourceSecurityGroupId: !Ref 'ApplicationServerSecurityGroup'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' environment Edfi ODS API EC2 instances'
        - IpProtocol: tcp
          FromPort: !If [ UsePostgres, '5432','1433']
          ToPort: !If [ UsePostgres, '5432','1433']
          SourceSecurityGroupId: !Ref 'MsSqlDBLambdaFunctionRestoreSG'
          Description: !Join
            - ''
            - - 'Allow access from the '
              - !Ref 'EnvLabel'
              - ' environment DB Restore Lambda Function'
  ProdAdminAppRDSAccess:
    Condition: ProdEnvironment
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'RDSSecurityGroup'
      IpProtocol: tcp
      FromPort: !If [ UsePostgres, '5432','1433']
      ToPort: !If [ UsePostgres, '5432','1433']
      Description: !Join
        - ''
        - - 'Allow access from the '
          - !Ref 'EnvLabel'
          - ' environment Edfi ODS API Admin App instances'
      SourceSecurityGroupId: !Ref 'AdminAppServerSecurityGroup'
  RDSIAMBackupRestoreRole:
    Condition: UseSQLServer
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - rds.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource:
                  - !Sub 'arn:aws:s3:::${S3SourceBucket}'
              - Effect: Allow
                Action:
                  - s3:GetObjectMetaData
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                Resource:
                  - !Sub 'arn:aws:s3:::${S3SourceBucket}/*'
  RDSRestoreOptionGroup:
    Condition: UseSQLServer
    Type: AWS::RDS::OptionGroup
    DeletionPolicy: Retain
    Properties:
      EngineName: !Ref 'SQLEngineEdition'
      MajorEngineVersion: '13.00'
      OptionGroupDescription: Allow EdFi RDS native restore and backup of *.bak files
        from S3.
      OptionConfigurations:
        - OptionName: SQLSERVER_BACKUP_RESTORE
          OptionSettings:
            - Name: IAM_ROLE_ARN
              Value: !GetAtt 'RDSIAMBackupRestoreRole.Arn'
Outputs:
  RDPServerSecurityGroupID:
    Description: Security Group IP for the RDGW Server
    Value: !Ref 'RDPServerSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-RDPServerSecurityGroupID'
  ApplicationELBSecurityGroupID:
    Description: Security Group ID for the ALB
    Value: !Ref 'ApplicationELBSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-ApplicationELBSecurityGroupID'
  ApplicationServerSecurityGroupID:
    Description: Security Group ID for the EC2 Instances for Application Servers
    Value: !Ref 'ApplicationServerSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-ApplicationServerSecurityGroupID'
  AdminAppELBSecurityGroupID:
    Condition: ProdEnvironment
    Description: Security Group ID for the Admin App ELB
    Value: !Ref 'AdminAppELBSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-AdminAppELBSecurityGroupID'
  AdminAppServerSecurityGroupID:
    Condition: ProdEnvironment
    Description: Security Group ID for the EC2 Instance of an Admin App
    Value: !Ref 'AdminAppServerSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-AdminAppServerSecurityGroupID'
  MsSqlDBLambdaFunctionRestoreSGID:
    Description: Security Group ID for the Lambda DB Restore Function in this VPC
    Value: !Ref 'MsSqlDBLambdaFunctionRestoreSG'
    Export:
      Name: !Sub '${AWS::StackName}-MsSqlDBLambdaFunctionRestoreSGID'
  RDSSecurityGroupID:
    Description: Security Group ID for the RDS
    Value: !Ref 'RDSSecurityGroup'
    Export:
      Name: !Sub '${AWS::StackName}-RDSSecurityGroupID'
  RDSOptionGroupName:
    Condition: UseSQLServer
    Description: Option Group Name for the RDS
    Value: !Ref 'RDSRestoreOptionGroup'
    Export:
      Name: !Sub '${AWS::StackName}-RDSOptionGroupName'
